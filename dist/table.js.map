{"version":3,"sources":["../src/table.js"],"names":["Table","constructor","id","name","options","columns","indexes","key","Object","keys","addIndex","opts","Error","push","addColumn","allowNull","hasParameters","type","column","Column"],"mappings":";;;;;;;AAAA;;;;AAEe,MAAMA,KAAN,CAAY;AACzBC,EAAAA,WAAW,CAACC,EAAD,EAAKC,IAAL,EAAWC,OAAX,EAAoB;AAC7B,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKC,IAAL,GAAYA,IAAI,IAAID,EAApB;AACA,SAAKG,OAAL,GAAe,EAAf;AACA,SAAKC,OAAL,GAAe,EAAf;AAEAF,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;;AAEA,SAAK,MAAMG,GAAX,IAAkBC,MAAM,CAACC,IAAP,CAAYL,OAAZ,CAAlB,EAAwC;AACtC,WAAKG,GAAL,IAAYH,OAAO,CAACG,GAAD,CAAnB;AACD;AACF;;AAEDG,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,QAAI,CAACA,IAAI,CAACN,OAAV,EAAmB;AACjB,YAAM,IAAIO,KAAJ,CAAU,gCAAV,CAAN;AACD;;AAED,SAAKN,OAAL,CAAaO,IAAb,CAAkBF,IAAlB;AACD;;AAEDG,EAAAA,SAAS,CAACH,IAAD,EAAO;AACd,QAAIA,IAAI,CAACT,EAAL,IAAW,IAAf,EAAqB;AACnBS,MAAAA,IAAI,CAACT,EAAL,GAAUS,IAAI,CAACR,IAAf;AACD;;AAED,QAAIQ,IAAI,CAACR,IAAL,IAAa,IAAjB,EAAuB;AACrBQ,MAAAA,IAAI,CAACR,IAAL,GAAYQ,IAAI,CAACT,EAAjB;AACD;;AAED,QAAIS,IAAI,CAACI,SAAL,IAAkB,IAAtB,EAA4B;AAC1BJ,MAAAA,IAAI,CAACI,SAAL,GAAiB,IAAjB;AACD;;AAED,UAAMC,aAAa,GAAGL,IAAI,CAACT,EAAL,IAAWS,IAAI,CAACR,IAAhB,IAAwBQ,IAAI,CAACM,IAAnD;;AAEA,QAAI,CAACD,aAAL,EAAoB;AAClB,YAAM,IAAIJ,KAAJ,CAAU,wCAAV,CAAN;AACD;;AAED,UAAMM,MAAM,GAAG,IAAIC,eAAJ,CAAWR,IAAX,CAAf;AAEA,SAAKN,OAAL,CAAaQ,IAAb,CAAkBK,MAAlB;AAEA,WAAO,IAAP;AACD;;AA9CwB","sourcesContent":["import Column from './column';\n\nexport default class Table {\n  constructor(id, name, options) {\n    this.id = id;\n    this.name = name || id;\n    this.columns = [];\n    this.indexes = [];\n\n    options = options || {};\n\n    for (const key of Object.keys(options)) {\n      this[key] = options[key];\n    }\n  }\n\n  addIndex(opts) {\n    if (!opts.columns) {\n      throw new Error('must provide columns parameter');\n    }\n\n    this.indexes.push(opts);\n  }\n\n  addColumn(opts) {\n    if (opts.id == null) {\n      opts.id = opts.name;\n    }\n\n    if (opts.name == null) {\n      opts.name = opts.id;\n    }\n\n    if (opts.allowNull == null) {\n      opts.allowNull = true;\n    }\n\n    const hasParameters = opts.id && opts.name && opts.type;\n\n    if (!hasParameters) {\n      throw new Error('must provide id, name, type parameters');\n    }\n\n    const column = new Column(opts);\n\n    this.columns.push(column);\n\n    return this;\n  }\n}\n"],"file":"table.js"}