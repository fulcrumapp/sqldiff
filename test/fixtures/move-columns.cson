name: 'move columns'
description: 'it can reorder columns'

old: [
  [ 'users', [
    [ 'id', 'pk' ]
    [ 'name', 'string', true ]
    [ 'desc', 'string', true ]
    [ 'height', 'double', true ]
    [ 'age', 'double', true ]
    [ 'address', 'text', true ]
  ] ]
]

new: [
  [ 'users', [
    [ 'id', 'pk' ]
    [ 'age', 'double', true ]
    [ 'name', 'string', true ]
    [ 'address', 'text', true ]
    [ 'height', 'double', true ]
    [ 'desc', 'string', true ]
  ] ]
]

diff: [
  [ type: 'recreate-table' ]
]

postgres: '''
CREATE TABLE "organization_1"."tmp_new_users" ("id" bigserial NOT NULL, "age" float, "name" text, "address" text, "height" float, "desc" text);
INSERT INTO "organization_1"."tmp_new_users" ("id", "age", "name", "address", "height", "desc") SELECT "id", "age", "name", "address", "height", "desc" FROM "organization_1"."users";
ALTER TABLE "organization_1"."users" RENAME TO "tmp_old_users";
ALTER TABLE "organization_1"."tmp_new_users" RENAME TO "users";
DROP TABLE IF EXISTS "organization_1"."tmp_old_users" CASCADE;
'''

sqlite: '''
CREATE TABLE `account_1_tmp_new_users` (`id` INTEGER PRIMARY KEY AUTOINCREMENT, `age` REAL, `name` TEXT, `address` TEXT, `height` REAL, `desc` TEXT);
INSERT INTO `account_1_tmp_new_users` (`id`, `age`, `name`, `address`, `height`, `desc`) SELECT `id`, `age`, `name`, `address`, `height`, `desc` FROM `account_1_users`;
ALTER TABLE `account_1_users` RENAME TO `account_1_tmp_old_users`;
ALTER TABLE `account_1_tmp_new_users` RENAME TO `account_1_users`;
DROP TABLE IF EXISTS `account_1_tmp_old_users`;
'''
